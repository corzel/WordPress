# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration

# Upstream to abstract backend connection(s) for php
upstream php {
        server 127.0.0.1:9000;
}


# general fastcgi configuration
# see: https://rtcamp.com/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/#nginx-config

fastcgi_cache_path /tmp/nginx-cache levels=1:2 keys_zone=WORDPRESS:10m inactive=60m;
# If you deploy on low memory VPS, make sure to use
# a disk based file for the above path


fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

server {

    listen 80;
    listen   [::]:80;
    server_name  .server_fqdn;

    location / {
        return  301 https://$server_name$request_uri;
    }

    include /etc/nginx/acme.challenge.*.conf;

}

server {
    # listens both on IPv4 and IPv6 on 443 and enables HTTPS support.
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    include /etc/nginx/ssl.*.conf;
    # conditional include as explained here: http://serverfault.com/a/478344

	root /usr/share/nginx/www;


	# Make site accessible from http://localhost/
	server_name .server_fqdn localhost;


# Add extra http header to responses to indicate caching status (HIT, MISS, BYPASS)
	add_header X-Cache-Status $upstream_cache_status;

# Add security headers
    include /etc/nginx/security_headers.conf;

    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
            set $skip_cache 1;
    }
    if ($query_string != "") {
            set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
            set $skip_cache 1;
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
            set $skip_cache 1;
    }


    include restrictions.conf;

	location / {
		try_files $uri $uri/ /index.php?$args;
		proxy_read_timeout 300;
	}


	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/www;
	}

    location /search {
        limit_req zone=wpsearch burst=3 nodelay;
        try_files $uri /index.php;
    }
    # see http://kbeezie.com/securing-nginx-php/2/


    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

	location ~ \.php$ {
        try_files $uri =404;
        # see: http://serverfault.com/questions/502790/security-issue-on-nginx-php-fastcgi-split-path-info

        limit_conn phplimit 5;
        # see http://kbeezie.com/securing-nginx-php/2/

		fastcgi_pass php;
		fastcgi_index index.php;
		include fastcgi.conf;


		fastcgi_read_timeout 300s;
		# see: http://www.kpsolution.com/tips/nginx-php-fcgi-upstream-timed-out-110-connection-timed-out-while-reading-response-header/149/
		# and: http://www.ttlsa.com/nginx/nginx-upstream-timed-out-110-connection-timed-out/
		# and: http://wiki.nginx.org/NginxHttpProxyModule#proxy_read_timeout


        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;

        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid  60m;
	}

	location ~ /purge(/.*) {
        fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}

}
